---
import GradientBorder from './GradientBorder.astro';
const navItems = [
  { href: '/', label: 'Home' },
  { href: '/about', label: 'About' },
  { href: '/services', label: 'Services' },
  { href: '/blog', label: 'Blog' },
  { href: '/contact', label: 'Contact', style: 'button' }
];
---

<header class="header">
  <div class="header-backdrop"></div>
  <nav class="nav container">
    <a href="/" class="logo">
      <span class="logo-text">
        <span class="gradient-text">Thrive</span>
        <span class="logo-dot"></span>
      </span>
    </a>

    <!-- Desktop Navigation -->
    <div class="nav-desktop">
      {navItems.map(({ href, label, style }) => (
        style === 'button' ? (
          <GradientBorder>
            <a 
              href={href}
              class:list={[
                'nav-link',
                { 
                  active: Astro.url.pathname === href,
                  'contact-link': style === 'button'
                }
              ]}
            >
              {label}
            </a>
          </GradientBorder>
        ) : (
          <a 
            href={href}
            class:list={[
              'nav-link',
              { active: Astro.url.pathname === href }
            ]}
          >
            {label}
          </a>
        )
      ))}
    </div>

    <!-- Mobile Navigation Toggle -->
    <button 
      class="mobile-nav-toggle" 
      aria-controls="mobile-nav"
      aria-expanded="false"
      aria-label="Toggle navigation menu"
    >
      <span class="sr-only">Menu</span>
      <div class="hamburger">
        <span></span>
        <span></span>
        <span></span>
      </div>
    </button>

    <!-- Mobile Navigation Menu -->
    <div class="nav-mobile" id="mobile-nav">
      {navItems.map(({ href, label, style }) => (
        <a 
          href={href}
          class:list={[
            'nav-link',
            { 
              active: Astro.url.pathname === href,
              'contact-link': style === 'button'
            }
          ]}
        >
          {label}
        </a>
      ))}
    </div>
  </nav>
</header>

<script>
  // Client-side JavaScript for mobile menu toggle
  const toggle = document.querySelector('.mobile-nav-toggle');
  const mobileNav = document.querySelector('.nav-mobile');

  if (toggle && mobileNav) {
    toggle.addEventListener('click', () => {
      const isExpanded = toggle.getAttribute('aria-expanded') === 'true';
      toggle.setAttribute('aria-expanded', (!isExpanded).toString());
      mobileNav.classList.toggle('show');
      document.body.classList.toggle('nav-open');
    });
  }

  // Add scroll detection
  function updateHeader() {
    const header = document.querySelector('.header');
    if (!header) return;
    
    const scrolled = window.scrollY > 10;
    header.classList.toggle('scrolled', scrolled);
  }

  // Initialize and add event listeners
  updateHeader();
  window.addEventListener('scroll', updateHeader);

  // Add intersection observer for better performance
  const observer = new IntersectionObserver(
    ([entry]) => {
      const header = document.querySelector('.header');
      if (header) {
        header.classList.toggle('at-top', entry.isIntersecting);
      }
    },
    { threshold: 1.0 }
  );

  // Observe a marker at the top of the page
  const topMarker = document.createElement('div');
  topMarker.style.height = '1px';
  topMarker.style.position = 'absolute';
  topMarker.style.top = '0';
  document.body.prepend(topMarker);
  observer.observe(topMarker);
</script>

<style>
  .header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 100;
    transition: height 0.3s ease;
    height: 5rem;
  }

  /* Backdrop that appears on scroll/hover */
  .header-backdrop {
    position: absolute;
    inset: 0;
    background: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0.95),
      rgba(255, 255, 255, 0.8)
    );
    backdrop-filter: blur(10px);
    opacity: 0;
    transition: opacity 0.3s ease;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  }

  /* Show backdrop on hover or when scrolled */
  .header:hover .header-backdrop,
  .header.scrolled .header-backdrop {
    opacity: 1;
  }

  .nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 5rem;
    padding: 0 var(--spacing-base);
    max-width: 1400px;
    margin: 0 auto;
    position: relative;
    z-index: 1;
  }

  .logo {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    color: var(--color-text);
  }

  .logo-text {
    display: flex;
    align-items: center;
    font-size: 1.75rem;
    font-weight: 800;
    letter-spacing: -0.02em;
    text-transform: uppercase;
    position: relative;
  }

  /* Add a subtle text shadow for better contrast when nav is transparent */
  .header:not(.scrolled) .gradient-text {
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    background: linear-gradient(135deg, #fff, #e0e0e0);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  /* Revert to original gradient when nav has backdrop */
  .header.scrolled .gradient-text,
  .header:hover .gradient-text {
    text-shadow: none;
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    background-clip: text;
  }

  .logo-dot {
    width: 8px;
    height: 8px;
    background: var(--color-primary);
    border-radius: 50%;
    margin-left: 2px;
    margin-top: -12px;
    box-shadow: 0 0 10px rgba(110, 58, 219, 0.5);
  }

  /* Adjust dot color when nav is transparent */
  .header:not(.scrolled) .logo-dot {
    background: #fff;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
  }

  .logo-tagline {
    font-size: 0.875rem;
    color: var(--color-text);
    opacity: 0.7;
    margin-top: -0.25rem;
    font-weight: 500;
  }

  .nav-desktop {
    display: flex;
    gap: 2rem;
    align-items: center;
  }

  .nav-link {
    text-decoration: none;
    color: var(--color-text-light);
    font-weight: 500;
    font-size: 0.9375rem;
    transition: color 0.3s ease;
    position: relative;
    opacity: 0.8;
  }

  /* Ensure contrast when header has backdrop */
  .header:hover .nav-link,
  .header.scrolled .nav-link {
    color: var(--color-text);
  }

  .nav-link:hover {
    opacity: 1;
  }

  .nav-link.active {
    opacity: 1;
    font-weight: 600;
  }

  .nav-link.active::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 100%;
    height: 2px;
    background: var(--gradient-primary);
  }

  /* Don't show underline for button-style links when active */
  .nav-link.contact-link.active::after {
    display: none;
  }

  /* Show different active state for button-style links */
  .nav-link.contact-link.active {
    background: var(--color-primary);
    color: white;
  }

  /* Base styles - outside media query */
  .mobile-nav-toggle {
    display: none; /* Hide by default */
  }

  .nav-mobile {
    display: none; /* Hide by default */
  }

  /* Mobile styles */
  @media (max-width: 768px) {
    .nav {
      height: 4rem;
    }

    .logo-text {
      font-size: 1.5rem;
    }

    .logo-tagline {
      display: none;
    }

    .nav-desktop {
      display: none;
    }

    .mobile-nav-toggle {
      display: block; /* Show only on mobile */
      background: none;
      border: none;
      cursor: pointer;
      padding: 0.5rem;
    }

    .hamburger {
      display: flex;
      flex-direction: column;
      gap: 6px;
    }

    .hamburger span {
      display: block;
      width: 24px;
      height: 2px;
      background: var(--color-text);
      transition: var(--transition-base);
    }

    .nav-mobile {
      display: none; /* Start hidden */
      flex-direction: column;
      position: fixed;
      top: 4rem;
      left: 0;
      right: 0;
      background: var(--color-background);
      padding: 1.5rem;
      transform: translateY(-150%);
      transition: transform 0.3s ease-in-out, opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
      gap: 1.25rem;
      border-bottom: 1px solid rgba(0, 0, 0, 0.1);
      opacity: 0;
      visibility: hidden;
    }

    .nav-mobile.show {
      display: flex; /* Show when active */
      transform: translateY(0);
      opacity: 1;
      visibility: visible;
    }
  }

  @media (prefers-color-scheme: dark) {
    .header-backdrop {
      background: linear-gradient(
        to bottom,
        rgba(17, 17, 17, 0.95),
        rgba(17, 17, 17, 0.8)
      );
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .nav-link {
      color: var(--color-text-dark);
    }

    .header:not(.scrolled) .gradient-text {
      background: linear-gradient(135deg, #fff, #e0e0e0);
      -webkit-background-clip: text;
      background-clip: text;
    }
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  .contact-link {
    color: var(--color-primary);
    padding: 0.5em 1.25em;
    border-radius: 100px;
    opacity: 1;
    transition: transform 0.2s ease, background-color 0.2s ease;
    background: var(--color-background);
    display: inline-block;
  }

  .contact-link:hover {
    transform: translateY(-1px);
    background: var(--color-gray-50);
  }

  @media (prefers-color-scheme: dark) {
    .contact-link {
      color: var(--color-accent);
      background: var(--color-background-dark);
    }

    .contact-link:hover {
      color: var(--color-secondary);
      background: var(--color-gray-900);
    }
  }

  /* Add this to your variables.css if not already present */
  :root {
    --color-gray-50: #f9fafb;
    --color-gray-900: #111827;
    --color-background-dark: rgba(17, 17, 17, 0.95);
  }
</style> 